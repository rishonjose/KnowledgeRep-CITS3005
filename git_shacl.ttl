@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix git:  <http://example.org/git-onto-logic#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

######## Repository ########
git:RepositoryShape a sh:NodeShape ;
  sh:targetClass git:Repository ;
  sh:property [
    sh:path git:hasBranch ;
    sh:minCount 1 ;
    sh:message "Each repository must have at least one branch." ;
  ] .

######## Branch ########
git:BranchShape a sh:NodeShape ;
  sh:targetClass git:Branch ;
  sh:property [
    sh:path git:hasCommit ;
    sh:minCount 1 ;
    sh:message "Each branch must have at least one commit." ;
  ] ;
  sh:property [
    sh:path git:mergedInto ;
    sh:maxCount 1 ;
    sh:message "A branch should not be merged into more than one branch." ;
  ] .

git:CommitShape a sh:NodeShape ;
  sh:targetClass git:Commit ;
  sh:property [
    sh:path git:authoredBy ;
    sh:minCount 1 ;
    sh:message "Commit must have at least one author." ;
  ] ;
  sh:property [
    sh:path git:onBranch ;
    sh:minCount 1 ;
    sh:message "Commit must belong to a Branch." ;
  ] ;
  sh:property [
    sh:path git:message ;                # <-- was git:commitMessage
    sh:minCount 1 ;
    sh:message "Commit must have a message." ;
  ] ;
  sh:property [
    sh:path git:commitDate ;
    sh:minCount 1 ;
    sh:message "Commit must have a timestamp." ;
  ] .


######## Pull Request ########
git:PullRequestShape a sh:NodeShape ;
  sh:targetClass git:PullRequest ;
  sh:property [
    sh:path git:state ;
    sh:minCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Each pull request must have a state (open/closed)." ;
  ] ;
  sh:property [
    sh:path git:mergedAt ;
    sh:maxCount 1 ;
    sh:datatype xsd:dateTime ;
    sh:message "If present, mergedAt must be a single xsd:dateTime." ;
  ] .

######## Issue ########
git:IssueShape a sh:NodeShape ;
  sh:targetClass git:Issue ;
  sh:property [
    sh:path git:state ;
    sh:minCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Each issue must have a state value (open/closed)." ;
  ] .

######## User ########
git:UserShape a sh:NodeShape ;
  sh:targetClass git:User ;
  sh:property [
    sh:path git:userLogin ;
    sh:minCount 1 ;
    sh:datatype xsd:string ;
    sh:pattern "^[A-Za-z0-9._-]+$" ;
    sh:message "Each user must have a valid login handle (alphanumeric, dots, underscores, or hyphens)." ;
  ] .

######## Concurrent Contributor (Optional) ########
git:ConcurrentContributorShape a sh:NodeShape ;
  sh:targetClass git:ConcurrentContributor ;
  sh:property [
    sh:path git:userLogin ;
    sh:minCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Concurrent contributor must have a login ID." ;
  ] .
